{"version":3,"sources":["components/landingpage.js","components/aboutme.js","components/contact.js","components/projects.js","components/resume.js","components/main.js","App.js","serviceWorker.js","index.js"],"names":["LandingPage","react_default","a","createElement","style","width","margin","lib","className","col","src","alt","href","rel","target","aria-hidden","Component","AboutMe","Contact","Projects","Resume","Main","Switch","Route","exact","path","component","App","title","scroll","Link","to","main","Boolean","window","location","hostname","match","ReactDOM","render","BrowserRouter","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"8NA4CeA,mLAxCX,OACEC,EAAAC,EAAAC,cAAA,OAAKC,MAAQ,CAACC,MAAO,OAAQC,OAAO,SAClCL,EAAAC,EAAAC,cAACI,EAAA,KAAD,CAAMC,UAAY,gBAChBP,EAAAC,EAAAC,cAACI,EAAA,KAAD,CAAME,IAAK,IACTR,EAAAC,EAAAC,cAAA,OACEO,IAAK,8GACLC,IAAM,SACNH,UAAY,eAGdP,EAAAC,EAAAC,cAAA,OAAKK,UAAU,eACbP,EAAAC,EAAAC,cAAA,+BACAF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,2FAGAF,EAAAC,EAAAC,cAAA,OAAKK,UAAU,gBAIbP,EAAAC,EAAAC,cAAA,KAAGS,KAAM,uDAAuDC,IAAI,sBAAsBC,OAAO,UAC/Fb,EAAAC,EAAAC,cAAA,KAAGK,UAAU,wBAAwBO,cAAY,UAInDd,EAAAC,EAAAC,cAAA,KAAGS,KAAK,+BAA+BC,IAAI,sBAAsBC,OAAO,UACtEb,EAAAC,EAAAC,cAAA,KAAGK,UAAU,sBAAsBO,cAAY,sBA5BvCC,aCUXC,mLARX,OACEhB,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,kCAJca,aCUPE,mLARX,OACEjB,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,kCAJca,aCUPG,mLARX,OACElB,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,mCAJea,aCURI,mLARX,OACEnB,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,iCAJaa,aCiBNK,EATF,kBACXpB,EAAAC,EAAAC,cAACmB,EAAA,EAAD,KACErB,EAAAC,EAAAC,cAACoB,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAM,aAAaC,UAAW1B,IAC3CC,EAAAC,EAAAC,cAACoB,EAAA,EAAD,CAAOE,KAAK,WAAWC,UAAWT,IAClChB,EAAAC,EAAAC,cAACoB,EAAA,EAAD,CAAOE,KAAK,WAAWC,UAAWR,IAClCjB,EAAAC,EAAAC,cAACoB,EAAA,EAAD,CAAOE,KAAK,YAAYC,UAAWP,IACnClB,EAAAC,EAAAC,cAACoB,EAAA,EAAD,CAAOE,KAAK,UAAUC,UAAWN,MCuBtBO,mLA9BX,OAEE1B,EAAAC,EAAAC,cAAA,OAAMK,UAAY,oBAChBP,EAAAC,EAAAC,cAACI,EAAA,OAAD,KACEN,EAAAC,EAAAC,cAACI,EAAA,OAAD,CAAQC,UAAU,eAAeoB,MAAM,eAAeC,QAAM,GAC1D5B,EAAAC,EAAAC,cAACI,EAAA,WAAD,KACEN,EAAAC,EAAAC,cAAC2B,EAAA,EAAD,CAAMC,GAAG,WAAT,UACA9B,EAAAC,EAAAC,cAAC2B,EAAA,EAAD,CAAMC,GAAG,YAAT,YACA9B,EAAAC,EAAAC,cAAC2B,EAAA,EAAD,CAAMC,GAAG,aAAT,YACA9B,EAAAC,EAAAC,cAAC2B,EAAA,EAAD,CAAMC,GAAG,YAAT,aAGJ9B,EAAAC,EAAAC,cAACI,EAAA,OAAD,CAAQqB,MAAM,SACZ3B,EAAAC,EAAAC,cAACI,EAAA,WAAD,KACEN,EAAAC,EAAAC,cAAA,KAAGS,KAAK,KAAR,QACAX,EAAAC,EAAAC,cAAA,KAAGS,KAAK,KAAR,QACAX,EAAAC,EAAAC,cAAA,KAAGS,KAAK,KAAR,QACAX,EAAAC,EAAAC,cAAA,KAAGS,KAAK,KAAR,UAGJX,EAAAC,EAAAC,cAACI,EAAA,QAAD,KACEN,EAAAC,EAAAC,cAAA,OAAKK,UAAU,iBACfP,EAAAC,EAAAC,cAAC6B,EAAD,gBAxBMhB,aCGEiB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,kGCLNC,IAASC,OACPtC,EAAAC,EAAAC,cAACqC,EAAA,EAAD,KACEvC,EAAAC,EAAAC,cAACsC,EAAD,OAGFC,SAASC,eAAe,SDyGpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.4e4f5a0a.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { Grid, Cell } from 'react-mdl';\r\nclass LandingPage extends Component {\r\n  render() {\r\n    return (\r\n      <div style ={{width: '100%', margin:'auto'}}>\r\n        <Grid className = \"landing-grid\">\r\n          <Cell col={12}>\r\n            <img \r\n              src= \"https://static1.fjcdn.com/comments/Because+not+everyone+is+a++weeaboo+_32cdc4c78bb2ef5deb5fa9182a320039.jpg\" \r\n              alt = \"avatar\" \r\n              className = \"avatar-img\"\r\n            />\r\n\r\n            <div className=\"banner-text\">\r\n              <h1>Software Engineer</h1>\r\n              <hr/>\r\n              <p> Java | C/C++ | Python | Javascript | HTML5 | CSS | React | Node | Bootstrap  </p>\r\n\r\n\r\n              <div className=\"social-links\">\r\n                {/* target:\"_blank\" ensures that your website stays open on a tab when they click your link */}\r\n                \r\n                {/* LinkedIn */}\r\n                <a href= \"https://www.linkedin.com/in/karen-cariaga-2a8241123/\" rel=\"noopener noreferrer\" target=\"_blank\">\r\n                  <i className=\"fa fa-linkedin-square\" aria-hidden=\"true\"/>\r\n                </a>\r\n\r\n                {/* Github */}\r\n                <a href=\"https://github.com/kccariaga\" rel=\"noopener noreferrer\" target=\"_blank\">\r\n                  <i className=\"fa fa-github-square\" aria-hidden=\"true\" />\r\n                </a>\r\n\r\n\r\n              </div>\r\n            </div>\r\n          </Cell>\r\n\r\n        </Grid>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default LandingPage;","import React, { Component } from 'react';\r\n\r\nclass AboutMe extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>AboutMe Page</h1>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default AboutMe;","import React,{ Component } from 'react';\r\n\r\nclass Contact extends Component{\r\n  render(){\r\n    return(\r\n      <div>\r\n        <h1>Contact Page</h1>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Contact;","import React, { Component } from 'react';\r\n\r\nclass Projects extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>Projects Page</h1>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Projects;","import React,{ Component } from 'react';\r\n\r\nclass Resume extends Component{\r\n  render(){\r\n    return(\r\n      <div>\r\n        <h1>Resume Page</h1>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Resume;","import React from 'react';\r\nimport { Switch, Route } from 'react-router-dom';\r\nimport LandingPage from './landingpage';\r\nimport AboutMe from './aboutme';\r\nimport Contact from './contact';\r\nimport Projects from './projects'\r\nimport Resume from './resume';\r\n\r\n//Not creating a class bc this is NOT a class-based component\r\n\r\nconst Main = () => (\r\n  <Switch>\r\n    <Route exact path =\"/portfolio\" component={LandingPage} />\r\n    <Route path=\"/aboutme\" component={AboutMe} />\r\n    <Route path=\"/contact\" component={Contact} />\r\n    <Route path=\"/projects\" component={Projects} />\r\n    <Route path=\"/resume\" component={Resume} />\r\n  </Switch>\r\n)\r\nexport default Main;","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport {Layout, Header, Navigation, Drawer, Content } from 'react-mdl';\r\nimport './App.css';\r\nimport Main from './components/main';\r\n\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      /* Uses a header that scrolls with the text, rather than staying locked at the top */ \r\n      < div className = \"demo-big-content\" >\r\n        <Layout>\r\n          <Header className=\"header-color\" title=\"My Portfolio\" scroll>\r\n            <Navigation>\r\n              <Link to=\"/resume\">Resume</Link>\r\n              <Link to=\"/aboutme\">About Me</Link>\r\n              <Link to=\"/projects\">Projects</Link>\r\n              <Link to=\"/contact\">Contact</Link>\r\n            </Navigation>\r\n          </Header>\r\n          <Drawer title=\"Title\">\r\n            <Navigation>\r\n              <a href=\"/\">Link</a>\r\n              <a href=\"/\">Link</a>\r\n              <a href=\"/\">Link</a>\r\n              <a href=\"/\">Link</a>\r\n            </Navigation>\r\n          </Drawer>\r\n          <Content>\r\n            <div className=\"page-content\" />\r\n            <Main/>\r\n          </Content>\r\n        </Layout>\r\n</div >\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport 'bootstrap';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport 'react-mdl/extra/material.css';\r\nimport 'react-mdl/extra/material.js';\r\nimport { BrowserRouter } from 'react-router-dom';\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <App />\r\n  </BrowserRouter>\r\n\r\n, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}